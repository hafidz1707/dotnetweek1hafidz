// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeekOneApi.Infrastructure.Data;

#nullable disable

namespace WeekOneApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220818020347_AddServiceListToDB")]
    partial class AddServiceListToDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("WeekOneApi.Infrastructure.Data.Models.AuthToken", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("expiredAt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("role")
                        .HasColumnType("TEXT");

                    b.Property<string>("token")
                        .HasColumnType("TEXT");

                    b.Property<int>("userId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("AuthTokens");
                });

            modelBuilder.Entity("WeekOneApi.Infrastructure.Data.Models.ServiceList", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("booking_date_time")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("create_time")
                        .HasColumnType("TEXT");

                    b.Property<string>("estimated_service")
                        .HasColumnType("TEXT");

                    b.Property<string>("input_source")
                        .HasColumnType("TEXT");

                    b.Property<int>("input_source_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("is_ontime")
                        .HasColumnType("TEXT");

                    b.Property<string>("is_rework")
                        .HasColumnType("TEXT");

                    b.Property<string>("is_vip")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("plate_number")
                        .HasColumnType("TEXT");

                    b.Property<string>("preferred_sa")
                        .HasColumnType("TEXT");

                    b.Property<string>("queue_number")
                        .HasColumnType("TEXT");

                    b.Property<string>("reg_number")
                        .HasColumnType("TEXT");

                    b.Property<string>("service_advisor")
                        .HasColumnType("TEXT");

                    b.Property<string>("status")
                        .HasColumnType("TEXT");

                    b.Property<int>("status_id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("waiting_time")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("ServiceLists");
                });

            modelBuilder.Entity("WeekOneApi.Infrastructure.Data.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("DeviceId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .HasColumnType("TEXT");

                    b.Property<string>("dealer_code")
                        .HasColumnType("TEXT");

                    b.Property<string>("dealer_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("is_registered")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.Property<string>("phone")
                        .HasColumnType("TEXT");

                    b.Property<int?>("pin_otp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("position_code")
                        .HasColumnType("TEXT");

                    b.Property<string>("position_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WeekOneApi.Infrastructure.Data.Models.UserChanger", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.Property<string>("phone")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("UsersChanger");
                });
#pragma warning restore 612, 618
        }
    }
}
